#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö 65 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3

def test_all_messages():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö 65 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    print("=" * 80)
    
    try:
        conn = sqlite3.connect('bookai.db')
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT message_key, message_name, content, is_active FROM bot_messages ORDER BY context, stage')
        messages = cursor.fetchall()
        
        print(f"üìä –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–∞–∑–µ: {len(messages)}")
        print()
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞–º
        contexts = {}
        for msg_key, msg_name, content, is_active in messages:
            if msg_key.startswith('book_'):
                context = 'PRODUCT (–ö–Ω–∏–≥–∞)'
            elif msg_key.startswith('song_'):
                context = 'SONG (–ü–µ—Å–Ω—è)'
            else:
                context = 'COMMON (–û–±—â–∏–µ)'
            
            if context not in contexts:
                contexts[context] = []
            contexts[context].append((msg_key, msg_name, content, is_active))
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞–º
        for context, msgs in contexts.items():
            active_count = sum(1 for _, _, _, is_active in msgs if is_active)
            print(f"üìÅ {context}: {len(msgs)} —Å–æ–æ–±—â–µ–Ω–∏–π ({active_count} –∞–∫—Ç–∏–≤–Ω—ã—Ö)")
        
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –∑–∞–º–µ–Ω–∏–ª–∏ –≤ bot.py
        test_messages = [
            ("email_request", "–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"),
            ("ask_name", "–ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
            ("book_gift_reason", "–ü–æ–≤–æ–¥ –¥–ª—è –∫–Ω–∏–≥–∏"),
            ("book_photo_request", "–ó–∞–ø—Ä–æ—Å —Ñ–æ—Ç–æ –¥–ª—è –∫–Ω–∏–≥–∏"),
            ("song_gift_reason", "–ü–æ–≤–æ–¥ –¥–ª—è –ø–µ—Å–Ω–∏"),
        ]
        
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–º–µ–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:")
        print("-" * 50)
        
        for message_key, description in test_messages:
            cursor.execute('SELECT content, is_active FROM bot_messages WHERE message_key = ?', (message_key,))
            result = cursor.fetchone()
            
            if result:
                content, is_active = result
                status = "‚úÖ –ê–∫—Ç–∏–≤–Ω–æ" if is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–æ"
                print(f"{status} {message_key} - {description}")
                print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {content[:60]}...")
            else:
                print(f"‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û: {message_key} - {description}")
            print()
        
        conn.close()
        
        print("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print()
        print("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:")
        print("1. –ó–∞–π–¥–∏—Ç–µ –≤ –∞–¥–º–∏–Ω–∫—É ‚Üí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º")
        print("2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∫–ª–∞–¥–∫—É (–û–±—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è/–ü—É—Ç—å –∫–Ω–∏–≥–∏/–ü—É—Ç—å –ø–µ—Å–Ω–∏)")
        print("3. –ù–∞–π–¥–∏—Ç–µ –ª—é–±–æ–µ –∏–∑ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
        print("4. –ò–∑–º–µ–Ω–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ")
        print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –±–æ—Ç–µ - –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å—Å—è!")
        print()
        print("üí° –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö 65 —Å–æ–æ–±—â–µ–Ω–∏–π!")
        print("   –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å –ª—é–±–æ–µ —Ö–∞—Ä–¥–∫–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ bot.py")
        print("   –Ω–∞ –≤—ã–∑–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ bot_messages_cache.py")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_all_messages()
