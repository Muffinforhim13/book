import React, { useState, useEffect } from "react";
import { Card } from "../components/ui/card";
import { translateStatus } from "../utils/statusTranslations";
import { getMSKDateRange, getMSKToday, formatDateTime } from '../utils/timeUtils';

interface MetricsData {
  totalOrders: number;
  paidOrders: number;
  upsellOrders: number;
  completedOrders: number;
  pendingOrders: number;
  totalRevenue: number;
  averageOrderValue: number;
  ordersByStatus: { [key: string]: number };
  ordersByProduct: { [key: string]: number };
  ordersByMonth: { [key: string]: number };
  conversionRate: number;
  topManagers: Array<{
    name: string;
    email: string;
    ordersCount: number;
    revenue: number;
  }>;
  
  // –ù–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –∏–∑ —Ç—Ä–µ–∫–∏–Ω–≥–∞ —Å–æ–±—ã—Ç–∏–π
  funnelMetrics: {
    funnel_data: { 
      [key: string]: {
        unique_users: number;
        total_clicks: number;
      }
    };
    conversions: { [key: string]: number };
    song_demo_users?: number;
    book_demo_users?: number;
  };
  abandonmentMetrics: Array<{
    step_name: string;
    abandonment_count: number;
    unique_users: number;
  }>;
  revenueMetrics: {
    main_purchases: {
      count: number;
      revenue: number;
      avg_value: number;
    };
    upsells: {
      count: number;
      revenue: number;
    };
  };
  detailedRevenueMetrics: {
    [key: string]: {
      count: number;
      revenue: number;
      avg_value: number;
    };
    '–ö–Ω–∏–≥–∞ (–æ–±—â–µ–µ)': {
      count: number;
      revenue: number;
      avg_value: number;
    };
    '–ö–Ω–∏–≥–∞ –ø–µ—á–∞—Ç–Ω–∞—è': {
      count: number;
      revenue: number;
      avg_value: number;
    };
    '–ö–Ω–∏–≥–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è': {
      count: number;
      revenue: number;
      avg_value: number;
    };
    '–ü–µ—Å–Ω—è (–æ–±—â–µ–µ)': {
      count: number;
      revenue: number;
      avg_value: number;
    };
    '–ü–µ—Å–Ω—è': {
      count: number;
      revenue: number;
      avg_value: number;
    };
  };
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  uniqueUsers: number;
  startRate: number;
  productSelectionRate: number;
  orderCreationRate: number;
  purchaseRate: number;
  
  // –î–µ—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º
  bookSelections: number;
  songSelections: number;
  bookPurchases: number;
  songPurchases: number;
  uniqueBookPurchasers: number;
  uniqueSongPurchasers: number;
  uniqueUpsellPurchasers: number;
  totalUniqueUsers: number;
}

interface AnalyticsData {
  order_id: string;
  source: string;
  utm_source: string;
  utm_medium: string;
  utm_campaign: string;
  username: string;
  product_type: string;
  created_at: string;
  purchase_status: string;
  upsell_status: string;
  progress: string;
  manager: string;
  phone: string;
  email: string;
}

interface AnalyticsResponse {
  status: string;
  data: AnalyticsData[];
  total: number;
  start_date: string;
  end_date: string;
}

interface UtmFiltersResponse {
  status: string;
  data: {
    utm_sources: string[];
    utm_mediums: string[];
    utm_campaigns: string[];
  };
}

export const MetricsPage: React.FC = () => {
  const [metrics, setMetrics] = useState<MetricsData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [activeTab, setActiveTab] = useState<'metrics' | 'analytics'>('metrics');
  const [analyticsData, setAnalyticsData] = useState<AnalyticsData[]>([]);
  const [analyticsLoading, setAnalyticsLoading] = useState(false);
  const [analyticsError, setAnalyticsError] = useState<string | null>(null);
  const [filters, setFilters] = useState({
    productType: '',
    purchaseStatus: '',
    upsellStatus: '',
    progress: '',
    utmSource: '',
    utmMedium: '',
    utmCampaign: ''
  });
  const [searchQuery, setSearchQuery] = useState('');
  const [dateRange, setDateRange] = useState<{
    start: string;
    end: string;
  }>(getMSKDateRange());
  const [utmFilters, setUtmFilters] = useState<{
    utm_sources: string[];
    utm_mediums: string[];
    utm_campaigns: string[];
  }>({
    utm_sources: [],
    utm_mediums: [],
    utm_campaigns: []
  });

  useEffect(() => {
    fetchMetrics();
  }, [dateRange]);

  useEffect(() => {
    if (activeTab === 'analytics') {
      fetchAnalytics();
      fetchUtmFilters();
    }
  }, [activeTab, dateRange, filters, searchQuery]);

  const fetchMetrics = async () => {
    try {
      setLoading(true);
      setError(null);
      const token = localStorage.getItem("token");
      const response = await fetch(`/admin/metrics?start_date=${dateRange.start}&end_date=${dateRange.end}`, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      if (!response.ok) {
        if (response.status === 401) {
          // –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫ –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
          localStorage.removeItem("token");
          window.location.href = "/login";
          return;
        }
        const errorText = await response.text();
        console.error("API Error:", response.status, errorText);
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ç—Ä–∏–∫: ${response.status} ${errorText}`);
      }

      const data = await response.json();
      console.log("Metrics data:", data);
      
      // –û–¢–õ–ê–î–ö–ê: –í—ã–≤–æ–¥–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      console.log('üîç –û–¢–õ–ê–î–ö–ê –§–†–û–ù–¢–ï–ù–î - –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫:', {
        totalOrders: data.totalOrders,
        paidOrders: data.paidOrders,
        bookPurchases: data.bookPurchases,
        songPurchases: data.songPurchases,
        totalUniqueUsers: data.totalUniqueUsers
      });
      
      setMetrics(data);
    } catch (err) {
      console.error("Fetch error:", err);
      setError(err instanceof Error ? err.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
    } finally {
      setLoading(false);
    }
  };

  const fetchAnalytics = async () => {
    try {
      setAnalyticsLoading(true);
      setAnalyticsError(null);
      const token = localStorage.getItem("token");
      
      // –°—Ç—Ä–æ–∏–º URL —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
      const params = new URLSearchParams({
        start_date: dateRange.start,
        end_date: dateRange.end
      });
      
      if (filters.productType) params.append('product_type', filters.productType);
      if (filters.purchaseStatus) params.append('purchase_status', filters.purchaseStatus);
      if (filters.upsellStatus) params.append('upsell_status', filters.upsellStatus);
      if (filters.progress) params.append('progress', filters.progress);
      if (filters.utmSource) params.append('utm_source', filters.utmSource);
      if (filters.utmMedium) params.append('utm_medium', filters.utmMedium);
      if (filters.utmCampaign) params.append('utm_campaign', filters.utmCampaign);
      if (searchQuery) params.append('search', searchQuery);
      
      const response = await fetch(`/admin/analytics?${params.toString()}`, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      if (!response.ok) {
        if (response.status === 401) {
          // –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫ –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
          localStorage.removeItem("token");
          window.location.href = "/login";
          return;
        }
        const errorText = await response.text();
        console.error("Analytics API Error:", response.status, errorText);
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: ${response.status} ${errorText}`);
      }

      const result: AnalyticsResponse = await response.json();
      console.log("Analytics data:", result);
      
      if (result.status === 'success') {
        setAnalyticsData(result.data);
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏–∫–∏');
      }
    } catch (err) {
      console.error("Analytics fetch error:", err);
      setAnalyticsError(err instanceof Error ? err.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
    } finally {
      setAnalyticsLoading(false);
    }
  };

  const fetchUtmFilters = async () => {
    try {
      const token = localStorage.getItem("token");
      const response = await fetch('/admin/analytics/utm-filters', {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      if (!response.ok) {
        if (response.status === 401) {
          // –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫ –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
          localStorage.removeItem("token");
          window.location.href = "/login";
          return;
        }
        const errorText = await response.text();
        console.error("UTM Filters API Error:", response.status, errorText);
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ UTM-—Ñ–∏–ª—å—Ç—Ä–æ–≤: ${response.status} ${errorText}`);
      }

      const result: UtmFiltersResponse = await response.json();
      console.log("UTM Filters data:", result);
      
      if (result.status === 'success') {
        setUtmFilters(result.data);
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è UTM-—Ñ–∏–ª—å—Ç—Ä–æ–≤');
      }
    } catch (err) {
      console.error("UTM Filters fetch error:", err);
      // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
    }
  };

  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'RUB',
      minimumFractionDigits: 0,
    }).format(amount);
  };

  const formatPercentage = (value: number) => {
    return `${(value * 100).toFixed(1)}%`;
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case '–û–ø–ª–∞—á–µ–Ω':
        return 'text-green-600 bg-green-100';
      case '–ù–µ –æ–ø–ª–∞—á–µ–Ω':
        return 'text-red-600 bg-red-100';
      default:
        return 'text-gray-600 bg-gray-100';
    }
  };

  const getProgressColor = (progress: string) => {
    if (progress.includes('100%')) {
      return 'text-green-600 bg-green-100';
    } else if (progress.includes('75%')) {
      return 'text-blue-600 bg-blue-100';
    } else if (progress.includes('50%')) {
      return 'text-yellow-600 bg-yellow-100';
    } else {
      return 'text-gray-600 bg-gray-100';
    }
  };

  const resetFilters = () => {
    setFilters({
      productType: '',
      purchaseStatus: '',
      upsellStatus: '',
      progress: '',
      utmSource: '',
      utmMedium: '',
      utmCampaign: ''
    });
    setSearchQuery('');
  };

  const exportData = async (format: 'csv' | 'excel') => {
    try {
      const token = localStorage.getItem("token");
      
      // –û–¢–õ–ê–î–ö–ê: –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
      console.log('üîç –û–¢–õ–ê–î–ö–ê —ç–∫—Å–ø–æ—Ä—Ç–∞: —Ç–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã:', filters);
      console.log('üîç –û–¢–õ–ê–î–ö–ê —ç–∫—Å–ø–æ—Ä—Ç–∞: –ø–æ–∏—Å–∫:', searchQuery);
      console.log('üîç –û–¢–õ–ê–î–ö–ê —ç–∫—Å–ø–æ—Ä—Ç–∞: –¥–∞—Ç—ã:', dateRange);
      
      // –°—Ç—Ä–æ–∏–º URL —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ –ø–æ–∏—Å–∫–æ–º
      const params = new URLSearchParams({
        start_date: dateRange.start,
        end_date: dateRange.end,
        format: format
      });
      
      if (filters.productType) params.append('product_type', filters.productType);
      if (filters.purchaseStatus) params.append('purchase_status', filters.purchaseStatus);
      if (filters.upsellStatus) params.append('upsell_status', filters.upsellStatus);
      if (filters.progress) params.append('progress', filters.progress);
      if (filters.utmSource) params.append('utm_source', filters.utmSource);
      if (filters.utmMedium) params.append('utm_medium', filters.utmMedium);
      if (filters.utmCampaign) params.append('utm_campaign', filters.utmCampaign);
      if (searchQuery) params.append('search', searchQuery);
      
      console.log('üîç –û–¢–õ–ê–î–ö–ê —ç–∫—Å–ø–æ—Ä—Ç–∞: —Ñ–∏–Ω–∞–ª—å–Ω—ã–π URL:', `/admin/analytics/export?${params.toString()}`);
      
      const response = await fetch(`/admin/analytics/export?${params.toString()}`, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      if (!response.ok) {
        if (response.status === 401) {
          // –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫ –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
          localStorage.removeItem("token");
          window.location.href = "/login";
          return;
        }
        throw new Error(`–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: ${response.status}`);
      }

      // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      // –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
      const fileExtension = format === 'excel' ? 'xlsx' : 'csv';
      a.download = `analytics_${dateRange.start}_to_${dateRange.end}.${fileExtension}`;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º MIME —Ç–∏–ø –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log(`–≠–∫—Å–ø–æ—Ä—Ç ${format}: MIME type = ${blob.type}, size = ${blob.size} bytes`);
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
      
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:', err);
      const errorMessage = err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
      alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö: ${errorMessage}`);
    }
  };

  if (loading) {
    return (
      <div className="container mx-auto p-6">
        <div className="flex justify-center items-center h-64">
          <div className="text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Ç—Ä–∏–∫...</div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="container mx-auto p-6">
        <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
          –û—à–∏–±–∫–∞: {error}
        </div>
      </div>
    );
  }

  if (!metrics) {
    return (
      <div className="container mx-auto p-6">
        <div className="text-center">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>
      </div>
    );
  }

  return (
    <div className="container mx-auto p-6">
      <div className="mb-6">
        <h1 className="text-3xl font-bold text-gray-900 mb-4">–ú–µ—Ç—Ä–∏–∫–∏</h1>
        
        {/* –í–∫–ª–∞–¥–∫–∏ */}
        <div className="border-b border-gray-200 mb-6">
          <nav className="-mb-px flex space-x-8">
            <button
              onClick={() => setActiveTab('metrics')}
              className={`py-2 px-1 border-b-2 font-medium text-sm ${
                activeTab === 'metrics'
                  ? 'border-blue-500 text-blue-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
            </button>
            <button
              onClick={() => setActiveTab('analytics')}
              className={`py-2 px-1 border-b-2 font-medium text-sm ${
                activeTab === 'analytics'
                  ? 'border-blue-500 text-blue-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
            </button>
          </nav>
        </div>
        
        {/* –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–∞–º */}
        <div className="flex gap-4 mb-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞
            </label>
            <input
              type="date"
              value={dateRange.start}
              onChange={(e) => setDateRange(prev => ({ ...prev, start: e.target.value }))}
              className="border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            </label>
            <input
              type="date"
              value={dateRange.end}
              onChange={(e) => setDateRange(prev => ({ ...prev, end: e.target.value }))}
              className="border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>
        </div>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ */}
      {activeTab === 'metrics' && (
        <>
          {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <Card className="p-6">
          <div className="text-center">
            <div className="text-3xl font-bold text-blue-600">{metrics.totalOrders}</div>
            <div className="text-gray-600">–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</div>
          </div>
        </Card>
        
        <Card className="p-6">
          <div className="text-center">
            <div className="text-3xl font-bold text-green-600">{metrics.paidOrders || 0}</div>
            <div className="text-gray-600">–û–ø–ª–∞—á–µ–Ω–Ω—ã—Ö</div>
          </div>
        </Card>
        
        <Card className="p-6">
          <div className="text-center">
            <div className="text-3xl font-bold text-purple-600">{metrics.upsellOrders || 0}</div>
            <div className="text-gray-600">–î–æ–ø. –ø—Ä–æ–¥–∞–∂</div>
          </div>
        </Card>
        
        <Card className="p-6">
          <div className="text-center">
            <div className="text-3xl font-bold text-orange-600">{metrics.completedOrders}</div>
            <div className="text-gray-600">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö</div>
          </div>
        </Card>
        
        <Card className="p-6">
          <div className="text-center">
            <div className="text-3xl font-bold text-purple-600">{formatCurrency(metrics.totalRevenue)}</div>
            <div className="text-gray-600">–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞</div>
          </div>
        </Card>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <Card className="p-6">
          <div className="text-center">
            <div className="text-2xl font-bold text-indigo-600">{formatCurrency(metrics.averageOrderValue)}</div>
            <div className="text-gray-600">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</div>
          </div>
        </Card>
        
        <Card className="p-6">
          <div className="text-center">
            <div className="text-2xl font-bold text-teal-600">{formatPercentage(metrics.conversionRate)}</div>
            <div className="text-gray-600">–ö–æ–Ω–≤–µ—Ä—Å–∏—è</div>
          </div>
        </Card>
      </div>

      {/* –¢–∞–±–ª–∏—Ü–∞ –º–µ—Ç—Ä–∏–∫ */}
      <Card className="p-6 mb-8">
        <h3 className="text-lg font-semibold mb-4">–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏</h3>
        <div className="overflow-x-auto">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –ú–µ—Ç—Ä–∏–∫–∞
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –ó–Ω–∞—á–µ–Ω–∏–µ
                </th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              <tr>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–¥–æ–≤ –≤ –±–æ—Ç
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {metrics.funnelMetrics?.funnel_data?.bot_entry?.unique_users || 0} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö / {metrics.funnelMetrics?.funnel_data?.bot_entry?.total_clicks || 0} –Ω–∞–∂–∞—Ç–∏–π
                </td>
              </tr>
              <tr>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  –ù–∞–∂–∞–ª–∏ "–°—Ç–∞—Ä—Ç"
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {metrics.funnelMetrics?.funnel_data?.start_clicked?.unique_users || 0} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö / {metrics.funnelMetrics?.funnel_data?.start_clicked?.total_clicks || 0} –Ω–∞–∂–∞—Ç–∏–π
                </td>
              </tr>
              <tr>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  –í—ã–±–æ—Ä –∫–Ω–∏–≥–∏
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {metrics.funnelMetrics?.funnel_data?.product_selected?.unique_users || 0} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö / {metrics.bookSelections || 0} –Ω–∞–∂–∞—Ç–∏–π
                </td>
              </tr>
              <tr>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  –í—ã–±–æ—Ä –ø–µ—Å–Ω–∏
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {metrics.funnelMetrics?.funnel_data?.product_selected?.unique_users || 0} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö / {metrics.songSelections || 0} –Ω–∞–∂–∞—Ç–∏–π
                </td>
              </tr>
              <tr>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  –ü–æ–∫—É–ø–∫–∏ –∫–Ω–∏–≥–∏
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {metrics.uniqueBookPurchasers || 0} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö / {metrics.bookPurchases || 0} –ø–æ–∫—É–ø–æ–∫
                </td>
              </tr>
              <tr>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  –ü–æ–∫—É–ø–∫–∏ –ø–µ—Å–Ω–∏
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {metrics.uniqueSongPurchasers || 0} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö / {metrics.songPurchases || 0} –ø–æ–∫—É–ø–æ–∫
                </td>
              </tr>
              <tr>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–æ–≤
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {formatCurrency((metrics.revenueMetrics?.main_purchases?.revenue || 0) + (metrics.revenueMetrics?.upsells?.revenue || 0))}
                </td>
              </tr>
              <tr>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {formatCurrency(metrics.revenueMetrics?.upsells?.revenue || 0)}
                </td>
              </tr>
              <tr>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {metrics.funnelMetrics?.funnel_data?.order_created?.unique_users || 0} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö / {metrics.funnelMetrics?.funnel_data?.order_created?.total_clicks || 0} –Ω–∞–∂–∞—Ç–∏–π
                </td>
              </tr>
              <tr>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {(metrics.uniqueBookPurchasers || 0) + (metrics.uniqueSongPurchasers || 0)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö / {(metrics.bookPurchases || 0) + (metrics.songPurchases || 0)} –ø–æ–∫—É–ø–æ–∫
                </td>
              </tr>
              <tr>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  –ü–µ—Ä–µ—à–ª–æ –≤–æ –≤—Ç–æ—Ä–æ–π –∑–∞–∫–∞–∑
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {metrics.uniqueUpsellPurchasers || 0} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö / {metrics.upsellOrders || 0} –ø–æ–∫—É–ø–æ–∫
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </Card>

      {/* –¢–∞–±–ª–∏—Ü–∞ –æ—Ç–≤–∞–ª–æ–≤ –ø–æ —ç—Ç–∞–ø–∞–º */}
      <Card className="p-6 mb-8">
        <h3 className="text-lg font-semibold mb-4">–û—Ç–≤–∞–ª—ã –ø–æ —ç—Ç–∞–ø–∞–º</h3>
        <div className="overflow-x-auto">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –≠—Ç–∞–ø
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–∞–ª–∏–≤—à–∏—Ö—Å—è
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –í—Å–µ–≥–æ –ø—Ä–æ—à–ª–æ —à–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∫ —à–∞–≥—É
                </th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {(() => {
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –º–µ—Ç—Ä–∏–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞
                const calculateStepMetrics = (stepName: string, stepTitle: string, fallbackAbandonment: number) => {
                  const abandonmentData = metrics.abandonmentMetrics?.find(m => m.step_name === stepName);
                  const abandonmentCount = abandonmentData?.abandonment_count || 0;
                  
                  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ abandonment_metrics, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
                  // totalUsersReachedStep —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤, –ø—Ä–æ—à–µ–¥—à–∏—Ö —ç—Ç–∞–ø
                  const totalUsersReachedStep = abandonmentData?.unique_users || 0;
                  
                  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ (–ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ù–ï –æ—Ç–≤–∞–ª–∏–ª–∏—Å—å)
                  const conversionRate = totalUsersReachedStep > 0 
                    ? Math.max(0, ((totalUsersReachedStep - abandonmentCount) / totalUsersReachedStep) * 100).toFixed(1)
                    : '0.0';
                  
                  return {
                    stepTitle,
                    abandonmentCount,
                    totalUsersPassedStep: totalUsersReachedStep,
                    conversionRate: `${conversionRate}%`
                  };
                };
                
                const steps = [
                  { stepName: 'product_selection', stepTitle: '–ì–ª–∞–≤–∞ 1 ‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–µ—Å–Ω–∏/–∫–Ω–∏–≥–∏', fallback: 0 },
                  { stepName: 'demo_sent', stepTitle: '–ì–ª–∞–≤–∞ 2 ‚Äî –î–µ–º–æ-–≤–µ—Ä—Å–∏—è –ø–µ—Å–Ω–∏', fallback: 0 },
                  { stepName: 'demo_sent_book', stepTitle: '–ì–ª–∞–≤–∞ 2 ‚Äî –î–µ–º–æ-–≤–µ—Ä—Å–∏—è –∫–Ω–∏–≥–∏', fallback: 0 },
                  { stepName: 'payment', stepTitle: '–ì–ª–∞–≤–∞ 3 ‚Äî –û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞', fallback: 0 },
                  { stepName: 'prefinal_sent', stepTitle: '–ì–ª–∞–≤–∞ 4 ‚Äî –ü—Ä–µ–¥—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è', fallback: 0 },
                  { stepName: 'editing', stepTitle: '–ì–ª–∞–≤–∞ 5 ‚Äî –ü—Ä–∞–≤–∫–∏ –∏ –¥–æ—Ä–∞–±–æ—Ç–∫–∏', fallback: 0 },
                  { stepName: 'completed', stepTitle: '–ì–ª–∞–≤–∞ 6 ‚Äî –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞', fallback: 0 }
                ];
                
                return steps.map((step, index) => {
                  const metrics = calculateStepMetrics(step.stepName, step.stepTitle, step.fallback);
                  return (
                    <tr key={index}>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                        {metrics.stepTitle}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        {metrics.abandonmentCount}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        {metrics.totalUsersPassedStep}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        {metrics.conversionRate}
                </td>
              </tr>
                  );
                });
              })()}
            </tbody>
          </table>
        </div>
      </Card>

      {/* –î–µ—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –≤—ã—Ä—É—á–∫–∏ */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <Card className="p-6">
          <h3 className="text-lg font-semibold mb-4">–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏</h3>
          <div className="space-y-2">
            <div className="flex justify-between">
              <span className="text-gray-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</span>
              <span className="font-medium">{metrics.revenueMetrics?.main_purchases?.count || 0}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–í—ã—Ä—É—á–∫–∞</span>
              <span className="font-medium">{formatCurrency(metrics.revenueMetrics?.main_purchases?.revenue || 0)}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</span>
              <span className="font-medium">{formatCurrency(metrics.revenueMetrics?.main_purchases?.avg_value || 0)}</span>
            </div>
          </div>
        </Card>

        <Card className="p-6">
          <h3 className="text-lg font-semibold mb-4">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏</h3>
          <div className="space-y-2">
            <div className="flex justify-between">
              <span className="text-gray-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</span>
              <span className="font-medium">{metrics.revenueMetrics?.upsells?.count || 0}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–í—ã—Ä—É—á–∫–∞</span>
              <span className="font-medium">{formatCurrency(metrics.revenueMetrics?.upsells?.revenue || 0)}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–î–æ–ª—è –æ—Ç –æ–±—â–µ–π –≤—ã—Ä—É—á–∫–∏</span>
              <span className="font-medium">
                {metrics.totalRevenue > 0 
                  ? formatPercentage((metrics.revenueMetrics?.upsells?.revenue || 0) / metrics.totalRevenue)
                  : '0%'
                }
              </span>
            </div>
          </div>
        </Card>
      </div>

      {/* –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –ø–æ —Ç–∏–ø–∞–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤ */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
        <Card className="p-6">
          <h3 className="text-lg font-semibold mb-4">–ö–Ω–∏–≥–∞ –ø–µ—á–∞—Ç–Ω–∞—è</h3>
          <div className="space-y-2">
            <div className="flex justify-between">
              <span className="text-gray-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</span>
              <span className="font-medium">{metrics.detailedRevenueMetrics?.['–ö–Ω–∏–≥–∞ –ø–µ—á–∞—Ç–Ω–∞—è']?.count || 0}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–í—ã—Ä—É—á–∫–∞</span>
              <span className="font-medium">{formatCurrency(metrics.detailedRevenueMetrics?.['–ö–Ω–∏–≥–∞ –ø–µ—á–∞—Ç–Ω–∞—è']?.revenue || 0)}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</span>
              <span className="font-medium">{formatCurrency(metrics.detailedRevenueMetrics?.['–ö–Ω–∏–≥–∞ –ø–µ—á–∞—Ç–Ω–∞—è']?.avg_value || 0)}</span>
            </div>
          </div>
        </Card>

        <Card className="p-6">
          <h3 className="text-lg font-semibold mb-4">–ö–Ω–∏–≥–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è</h3>
          <div className="space-y-2">
            <div className="flex justify-between">
              <span className="text-gray-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</span>
              <span className="font-medium">{metrics.detailedRevenueMetrics?.['–ö–Ω–∏–≥–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è']?.count || 0}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–í—ã—Ä—É—á–∫–∞</span>
              <span className="font-medium">{formatCurrency(metrics.detailedRevenueMetrics?.['–ö–Ω–∏–≥–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è']?.revenue || 0)}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</span>
              <span className="font-medium">{formatCurrency(metrics.detailedRevenueMetrics?.['–ö–Ω–∏–≥–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è']?.avg_value || 0)}</span>
            </div>
          </div>
        </Card>

        <Card className="p-6">
          <h3 className="text-lg font-semibold mb-4">–ü–µ—Å–Ω—è</h3>
          <div className="space-y-2">
            <div className="flex justify-between">
              <span className="text-gray-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</span>
              <span className="font-medium">{metrics.detailedRevenueMetrics?.['–ü–µ—Å–Ω—è']?.count || 0}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–í—ã—Ä—É—á–∫–∞</span>
              <span className="font-medium">{formatCurrency(metrics.detailedRevenueMetrics?.['–ü–µ—Å–Ω—è']?.revenue || 0)}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</span>
              <span className="font-medium">{formatCurrency(metrics.detailedRevenueMetrics?.['–ü–µ—Å–Ω—è']?.avg_value || 0)}</span>
            </div>
          </div>
        </Card>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <Card className="p-6">
          <h3 className="text-lg font-semibold mb-4">–ó–∞–∫–∞–∑—ã –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º</h3>
          <div className="space-y-2">
            {Object.entries(metrics.ordersByStatus).map(([status, count]) => (
              <div key={status} className="flex justify-between">
                <span className="text-gray-600">{translateStatus(status)}</span>
                <span className="font-medium">{count}</span>
              </div>
            ))}
          </div>
        </Card>

        <Card className="p-6">
          <h3 className="text-lg font-semibold mb-4">–ó–∞–∫–∞–∑—ã –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º</h3>
          <div className="space-y-2">
            {/* –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ - –≤—Å–µ –∑–∞–∫–∞–∑—ã, –≤—ã–±—Ä–∞–≤—à–∏–µ –ø—Ä–æ–¥—É–∫—Ç (–Ω–µ —Ç–æ–ª—å–∫–æ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ) */}
            <div className="flex justify-between">
              <span className="text-gray-600 font-semibold">–ö–Ω–∏–≥–∞ (–æ–±—â–µ–µ)</span>
              <span className="font-medium">{metrics.bookSelections || 0}</span>
            </div>
            <div className="flex justify-between ml-4">
              <span className="text-gray-500">‚Äî –ö–Ω–∏–≥–∞ –ø–µ—á–∞—Ç–Ω–∞—è (–æ–ø–ª–∞—á–µ–Ω–æ)</span>
              <span className="font-medium">{metrics.detailedRevenueMetrics?.['–ö–Ω–∏–≥–∞ –ø–µ—á–∞—Ç–Ω–∞—è']?.count || 0}</span>
            </div>
            <div className="flex justify-between ml-4">
              <span className="text-gray-500">‚Äî –ö–Ω–∏–≥–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è (–æ–ø–ª–∞—á–µ–Ω–æ)</span>
              <span className="font-medium">{metrics.detailedRevenueMetrics?.['–ö–Ω–∏–≥–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è']?.count || 0}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600 font-semibold">–ü–µ—Å–Ω—è (–æ–±—â–µ–µ)</span>
              <span className="font-medium">{metrics.songSelections || 0}</span>
            </div>
            <div className="flex justify-between ml-4">
              <span className="text-gray-500">‚Äî –ü–µ—Å–Ω—è (–æ–ø–ª–∞—á–µ–Ω–æ)</span>
              <span className="font-medium">{metrics.detailedRevenueMetrics?.['–ü–µ—Å–Ω—è']?.count || 0}</span>
            </div>
          </div>
        </Card>
      </div>

      {/* –¢–æ–ø –º–µ–Ω–µ–¥–∂–µ—Ä—ã */}
      <Card className="p-6">
        <h3 className="text-lg font-semibold mb-4">–¢–æ–ø –º–µ–Ω–µ–¥–∂–µ—Ä—ã</h3>
        <div className="overflow-x-auto">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –ú–µ–Ω–µ–¥–∂–µ—Ä
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –ó–∞–∫–∞–∑–æ–≤
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –í—ã—Ä—É—á–∫–∞
                </th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {metrics.topManagers.map((manager, index) => (
                <tr key={index}>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <div>
                      <div className="text-sm font-medium text-gray-900">{manager.name}</div>
                      <div className="text-sm text-gray-500">{manager.email}</div>
                    </div>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    {manager.ordersCount}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    {formatCurrency(manager.revenue)}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </Card>
        </>
      )}

      {/* –í–∫–ª–∞–¥–∫–∞ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ */}
      {activeTab === 'analytics' && (
        <>
          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
              <div className="text-center">
                <div className="text-2xl font-bold text-blue-600">{analyticsData.length}</div>
                <div className="text-sm text-gray-600">–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-green-600">
                  {analyticsData.filter(item => item.purchase_status === '–û–ø–ª–∞—á–µ–Ω').length}
                </div>
                <div className="text-sm text-gray-600">–û–ø–ª–∞—á–µ–Ω–Ω—ã—Ö</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-purple-600">
                  {analyticsData.filter(item => item.upsell_status === '–û–ø–ª–∞—á–µ–Ω').length}
                </div>
                <div className="text-sm text-gray-600">–î–æ–ø. –ø—Ä–æ–¥–∞–∂</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-orange-600">
                  {analyticsData.filter(item => 
                    item.progress === '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' ||  // –ü–µ—Å–Ω–∏ - completed
                    item.progress === '–ó–∞–≤–µ—Ä—à–µ–Ω' ||   // –ö–Ω–∏–≥–∏ - completed
                    item.progress === '–ì–æ—Ç–æ–≤–æ –∫ –¥–æ—Å—Ç–∞–≤–∫–µ' || 
                    item.progress === '–§–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è' ||
                    item.progress === '–ì–æ—Ç–æ–≤–æ' ||     // –ü–µ—Å–Ω–∏ - ready
                    item.progress === '–ì–æ—Ç–æ–≤' ||      // –ö–Ω–∏–≥–∏ - ready
                    item.progress === '–î–æ—Å—Ç–∞–≤–ª–µ–Ω' ||  // delivered
                    item.progress === '‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞'  // final_sent
                  ).length}
                </div>
                <div className="text-sm text-gray-600">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö</div>
              </div>
            </div>
          </div>

          {/* –ü–æ–∏—Å–∫ */}
          <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
            <div className="flex gap-4">
              <div className="flex-1">
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ü–æ–∏—Å–∫
                </label>
                <input
                  type="text"
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  placeholder="–ü–æ–∏—Å–∫ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∑–∞–∫–∞–∑—É, –¥–∞—Ç–µ..."
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
            </div>
          </div>

          {/* –§–∏–ª—å—Ç—Ä—ã */}
          <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –¢–∏–ø –∑–∞–∫–∞–∑–∞
                </label>
                <select
                  value={filters.productType}
                  onChange={(e) => setFilters(prev => ({ ...prev, productType: e.target.value }))}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–í—Å–µ —Ç–∏–ø—ã</option>
                  <option value="–ü–µ—Å–Ω—è">–ü–µ—Å–Ω—è</option>
                  <option value="–ö–Ω–∏–≥–∞ –ø–µ—á–∞—Ç–Ω–∞—è">–ö–Ω–∏–≥–∞ –ø–µ—á–∞—Ç–Ω–∞—è</option>
                  <option value="–ö–Ω–∏–≥–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è">–ö–Ω–∏–≥–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è</option>
                  <option value="–ö–Ω–∏–≥–∞">–ö–Ω–∏–≥–∞ (–æ–±—â–µ–µ)</option>
                </select>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –°—Ç–∞—Ç—É—Å –ø–æ–∫—É–ø–∫–∏
                </label>
                <select
                  value={filters.purchaseStatus}
                  onChange={(e) => setFilters(prev => ({ ...prev, purchaseStatus: e.target.value }))}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                  <option value="–û–ø–ª–∞—á–µ–Ω">–û–ø–ª–∞—á–µ–Ω</option>
                  <option value="–ù–µ –æ–ø–ª–∞—á–µ–Ω">–ù–µ –æ–ø–ª–∞—á–µ–Ω</option>
                  <option value="–ñ–¥–µ—Ç –æ–ø–ª–∞—Ç—ã">–ñ–¥–µ—Ç –æ–ø–ª–∞—Ç—ã</option>
                </select>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –î–æ–ø. –ø—Ä–æ–¥–∞–∂–∞
                </label>
                <select
                  value={filters.upsellStatus}
                  onChange={(e) => setFilters(prev => ({ ...prev, upsellStatus: e.target.value }))}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                  <option value="–û–ø–ª–∞—á–µ–Ω">–û–ø–ª–∞—á–µ–Ω</option>
                  <option value="–ù–µ –æ–ø–ª–∞—á–µ–Ω">–ù–µ –æ–ø–ª–∞—á–µ–Ω</option>
                  <option value="–ñ–¥–µ—Ç –æ–ø–ª–∞—Ç—ã">–ñ–¥–µ—Ç –æ–ø–ª–∞—Ç—ã</option>
                </select>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ü—Ä–æ–≥—Ä–µ—Å—Å
                </label>
                <select
                  value={filters.progress}
                  onChange={(e) => setFilters(prev => ({ ...prev, progress: e.target.value }))}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–í—Å–µ —ç—Ç–∞–ø—ã</option>
                  <option value="–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞">–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</option>
                  <option value="–°–±–æ—Ä —Ñ–∞–∫—Ç–æ–≤">–°–±–æ—Ä —Ñ–∞–∫—Ç–æ–≤</option>
                  <option value="–î–µ–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç">–î–µ–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—É">–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—É</option>
                  <option value="–û–ø–ª–∞—á–µ–Ω–æ">–û–ø–ª–∞—á–µ–Ω–æ</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç –≤—ã–±–æ—Ä–∞ —Å—é–∂–µ—Ç–∞">–û–∂–∏–¥–∞–µ—Ç –≤—ã–±–æ—Ä–∞ —Å—é–∂–µ—Ç–∞</option>
                  <option value="–°—é–∂–µ—Ç –≤—ã–±—Ä–∞–Ω">–°—é–∂–µ—Ç –≤—ã–±—Ä–∞–Ω</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–∞">–û–∂–∏–¥–∞–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–∞</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –ø–µ—Å–Ω–∏">–û–∂–∏–¥–∞–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –ø–µ—Å–Ω–∏</option>
                  <option value="–ß–µ—Ä–Ω–æ–≤–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω">–ß–µ—Ä–Ω–æ–≤–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç –æ—Ç–∑—ã–≤–æ–≤">–û–∂–∏–¥–∞–µ—Ç –æ—Ç–∑—ã–≤–æ–≤</option>
                  <option value="–ü—Ä–∞–≤–∫–∏ –≤–Ω–µ—Å–µ–Ω—ã">–ü—Ä–∞–≤–∫–∏ –≤–Ω–µ—Å–µ–Ω—ã</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç –≤—ã–±–æ—Ä–∞ –æ–±–ª–æ–∂–∫–∏">–û–∂–∏–¥–∞–µ—Ç –≤—ã–±–æ—Ä–∞ –æ–±–ª–æ–∂–∫–∏</option>
                  <option value="–û–±–ª–æ–∂–∫–∞ –≤—ã–±—Ä–∞–Ω–∞">–û–±–ª–æ–∂–∫–∞ –≤—ã–±—Ä–∞–Ω–∞</option>
                  <option value="–ü—Ä–µ–¥—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞">–ü—Ä–µ–¥—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏">–û–∂–∏–¥–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏</option>
                  <option value="–§–∏–Ω–∞–ª—å–Ω–∞—è –ø–µ—Å–Ω—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞">–§–∏–Ω–∞–ª—å–Ω–∞—è –ø–µ—Å–Ω—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</option>
                  <option value="–§–∏–Ω–∞–ª—å–Ω–∞—è –∫–Ω–∏–≥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞">–§–∏–Ω–∞–ª—å–Ω–∞—è –∫–Ω–∏–≥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</option>
                  <option value="–ì–æ—Ç–æ–≤–æ –∫ –¥–æ—Å—Ç–∞–≤–∫–µ">–ì–æ—Ç–æ–≤–æ –∫ –¥–æ—Å—Ç–∞–≤–∫–µ</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏">–û–∂–∏–¥–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏</option>
                  <option value="–î–æ–ø–ª–∞—Ç–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ">–î–æ–ø–ª–∞—Ç–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ</option>
                  <option value="–ì–æ—Ç–æ–≤–æ">–ì–æ—Ç–æ–≤–æ</option>
                  <option value="–ó–∞–≤–µ—Ä—à–µ–Ω–æ">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</option>
                  {/* –î–æ–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –∏–∑ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –∫–æ–ª–æ–Ω–∫–æ–π "–ü—Ä–æ–≥—Ä–µ—Å—Å (–æ—Å—Ç–∞–Ω–æ–≤–∫–∞)" */}
                  <option value="–°–æ–∑–¥–∞–Ω">–°–æ–∑–¥–∞–Ω</option>
                  <option value="–í—ã–±—Ä–∞–Ω –ø—Ä–æ–¥—É–∫—Ç">–í—ã–±—Ä–∞–Ω –ø—Ä–æ–¥—É–∫—Ç</option>
                  <option value="–í—ã–±—Ä–∞–Ω –ø–æ–ª">–í—ã–±—Ä–∞–Ω –ø–æ–ª</option>
                  <option value="–í—ã–±—Ä–∞–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—å">–í—ã–±—Ä–∞–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—å</option>
                  <option value="–í–≤–µ–¥–µ–Ω–æ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è">–í–≤–µ–¥–µ–Ω–æ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è</option>
                  <option value="–í–≤–µ–¥–µ–Ω–æ –∏–º—è">–í–≤–µ–¥–µ–Ω–æ –∏–º—è</option>
                  <option value="–û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞">–û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</option>
                  <option value="–£–∫–∞–∑–∞–Ω –ø–æ–≤–æ–¥ –ø–æ–¥–∞—Ä–∫–∞">–£–∫–∞–∑–∞–Ω –ø–æ–≤–æ–¥ –ø–æ–¥–∞—Ä–∫–∞</option>
                  <option value="–í—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å">–í—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å</option>
                  <option value="–°–æ–∑–¥–∞–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂">–°–æ–∑–¥–∞–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂</option>
                  <option value="–ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ñ–æ—Ç–æ">–ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ñ–æ—Ç–æ</option>
                  <option value="–ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ñ–æ—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è">–ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ñ–æ—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è</option>
                  <option value="–í–≤–µ–¥–µ–Ω–æ –∏–º—è –≤—Ç–æ—Ä–æ–≥–æ –≥–µ—Ä–æ—è">–í–≤–µ–¥–µ–Ω–æ –∏–º—è –≤—Ç–æ—Ä–æ–≥–æ –≥–µ—Ä–æ—è</option>
                  <option value="–û–ø–∏—Å–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞">–û–ø–∏—Å–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</option>
                  <option value="–ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ñ–æ—Ç–æ –≤—Ç–æ—Ä–æ–≥–æ –≥–µ—Ä–æ—è">–ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ñ–æ—Ç–æ –≤—Ç–æ—Ä–æ–≥–æ –≥–µ—Ä–æ—è</option>
                  <option value="–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ —Ñ–æ—Ç–æ">–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ —Ñ–æ—Ç–æ</option>
                  <option value="–í—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞">–í—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞">–û–∂–∏–¥–∞–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞</option>
                  <option value="‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–µ–º–æ">‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–µ–º–æ</option>
                  <option value="‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—é–∂–µ—Ç–∞">‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—é–∂–µ—Ç–∞</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å—é–∂–µ—Ç–∞">–û–∂–∏–¥–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å—é–∂–µ—Ç–∞</option>
                  <option value="–°—Ç—Ä–∞–Ω–∏—Ü—ã –≤—ã–±—Ä–∞–Ω—ã">–°—Ç—Ä–∞–Ω–∏—Ü—ã –≤—ã–±—Ä–∞–Ω—ã</option>
                  <option value="–ó–∞–≤–µ—Ä—à–µ–Ω—ã –≤–æ–ø—Ä–æ—Å—ã">–ó–∞–≤–µ—Ä—à–µ–Ω—ã –≤–æ–ø—Ä–æ—Å—ã</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç –æ—Ç–∑—ã–≤–∞">–û–∂–∏–¥–∞–µ—Ç –æ—Ç–∑—ã–≤–∞</option>
                  <option value="–û–±—Ä–∞–±–æ—Ç–∞–Ω –æ—Ç–∑—ã–≤">–û–±—Ä–∞–±–æ—Ç–∞–Ω –æ—Ç–∑—ã–≤</option>
                  <option value="–í–Ω–µ—Å–µ–Ω–∏–µ –ø—Ä–∞–≤–æ–∫">–í–Ω–µ—Å–µ–Ω–∏–µ –ø—Ä–∞–≤–æ–∫</option>
                  <option value="‚úÖ –ü—Ä–µ–¥—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞">‚úÖ –ü—Ä–µ–¥—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç —Ñ–∏–Ω–∞–ª–∞">–û–∂–∏–¥–∞–µ—Ç —Ñ–∏–Ω–∞–ª–∞</option>
                  <option value="‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞">‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</option>
                  <option value="–ì–æ—Ç–æ–≤">–ì–æ—Ç–æ–≤</option>
                  <option value="–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—á–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏">–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—á–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏</option>
                  <option value="–î–æ—Å—Ç–∞–≤–ª–µ–Ω">–î–æ—Å—Ç–∞–≤–ª–µ–Ω</option>
                  <option value="–û–ø–ª–∞—á–µ–Ω">–û–ø–ª–∞—á–µ–Ω</option>
                  <option value="–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã">–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã</option>
                  <option value="–°–æ–∑–¥–∞–Ω –ø–ª–∞—Ç–µ–∂">–°–æ–∑–¥–∞–Ω –ø–ª–∞—Ç–µ–∂</option>
                  <option value="–û–∂–∏–¥–∞–Ω–∏–µ –¥–æ–ø–ª–∞—Ç—ã">–û–∂–∏–¥–∞–Ω–∏–µ –¥–æ–ø–ª–∞—Ç—ã</option>
                  <option value="–î–æ–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞">–î–æ–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞</option>
                  <option value="–î–æ–ø–ª–∞—Ç–∞ –∑–∞ –ø–µ—á–∞—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é –æ–ø–ª–∞—á–µ–Ω–∞">–î–æ–ø–ª–∞—Ç–∞ –∑–∞ –ø–µ—á–∞—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é –æ–ø–ª–∞—á–µ–Ω–∞</option>
                  <option value="–ó–∞–≤–µ—Ä—à–µ–Ω">–ó–∞–≤–µ—Ä—à–µ–Ω</option>
                </select>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  UTM Source
                </label>
                <select
                  value={filters.utmSource}
                  onChange={(e) => setFilters(prev => ({ ...prev, utmSource: e.target.value }))}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏</option>
                  {utmFilters.utm_sources.map((source) => (
                    <option key={source} value={source}>{source}</option>
                  ))}
                </select>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  UTM Medium
                </label>
                <select
                  value={filters.utmMedium}
                  onChange={(e) => setFilters(prev => ({ ...prev, utmMedium: e.target.value }))}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–í—Å–µ –∫–∞–Ω–∞–ª—ã</option>
                  {utmFilters.utm_mediums.map((medium) => (
                    <option key={medium} value={medium}>{medium}</option>
                  ))}
                </select>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  UTM Campaign
                </label>
                <select
                  value={filters.utmCampaign}
                  onChange={(e) => setFilters(prev => ({ ...prev, utmCampaign: e.target.value }))}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–í—Å–µ –∫–∞–º–ø–∞–Ω–∏–∏</option>
                  {utmFilters.utm_campaigns.map((campaign) => (
                    <option key={campaign} value={campaign}>{campaign}</option>
                  ))}
                </select>
              </div>
              
              <div className="flex items-end">
                <button
                  onClick={resetFilters}
                  className="w-full bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500"
                >
                  –°–±—Ä–æ—Å–∏—Ç—å
                </button>
              </div>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ */}
          <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
            <div className="flex gap-4">
              <button
                onClick={() => exportData('csv')}
                className="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500"
              >
                üìä –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV
              </button>
              <button
                onClick={() => exportData('excel')}
                className="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
              >
                üìà –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel
              </button>
            </div>
          </div>

          {/* –¢–∞–±–ª–∏—Ü–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ */}
          <div className="bg-white rounded-lg shadow-sm overflow-hidden">
            {analyticsLoading ? (
              <div className="p-8 text-center">
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
                <p className="mt-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
              </div>
            ) : analyticsError ? (
              <div className="p-8 text-center">
                <div className="text-red-600 mb-2">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</div>
                <p className="text-gray-600">{analyticsError}</p>
                <button
                  onClick={fetchAnalytics}
                  className="mt-4 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700"
                >
                  –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                </button>
              </div>
            ) : analyticsData.length === 0 ? (
              <div className="p-8 text-center">
                <div className="text-gray-600 mb-2">üìä –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</div>
                <p className="text-gray-500">–ó–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
              </div>
            ) : (
              <div className="overflow-x-auto">
                <table className="min-w-full divide-y divide-gray-200">
                  <thead className="bg-gray-50">
                    <tr>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        UTM Source
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        UTM Medium
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        UTM Campaign
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        ‚Ññ –∑–∞–∫–∞–∑–∞
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Username
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        –¢–∏–ø –∑–∞–∫–∞–∑–∞
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        –°—Ç–∞—Ç—É—Å –ø–æ–∫—É–ø–∫–∏
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        –î–æ–ø. –ø—Ä–æ–¥–∞–∂–∞
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        –ü—Ä–æ–≥—Ä–µ—Å—Å (–æ—Å—Ç–∞–Ω–æ–≤–∫–∞)
                      </th>
                    </tr>
                  </thead>
                  <tbody className="bg-white divide-y divide-gray-200">
                    {analyticsData.map((item, index) => (
                      <tr key={index} className="hover:bg-gray-50">
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {item.utm_source}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {item.utm_medium}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {item.utm_campaign}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600">
                          {item.order_id}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {item.username}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {item.product_type}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {formatDateTime(item.created_at)}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(item.purchase_status)}`}>
                            {item.purchase_status}
                          </span>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(item.upsell_status)}`}>
                            {item.upsell_status}
                          </span>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getProgressColor(item.progress)}`}>
                            {item.progress}
                          </span>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            )}
          </div>
        </>
      )}
    </div>
  );
};
