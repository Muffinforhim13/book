#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è email –≤ —Ç–∞–±–ª–∏—Ü—É orders
"""

import asyncio
import aiosqlite
import os

DB_PATH = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'bookai.db')

async def migrate_add_email():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ email –≤ —Ç–∞–±–ª–∏—Ü—É orders –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
    async with aiosqlite.connect(DB_PATH) as db:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª–µ email –≤ —Ç–∞–±–ª–∏—Ü–µ orders
            cursor = await db.execute("PRAGMA table_info(orders)")
            columns = await cursor.fetchall()
            column_names = [column[1] for column in columns]
            
            # –ï—Å–ª–∏ –ø–æ–ª–µ email –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
            if 'email' not in column_names:
                print("üìß –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ email –≤ —Ç–∞–±–ª–∏—Ü—É orders...")
                await db.execute('ALTER TABLE orders ADD COLUMN email TEXT')
                await db.commit()
                print("‚úÖ –ü–æ–ª–µ email —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
            else:
                print("‚úÖ –ü–æ–ª–µ email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ orders")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
            raise

if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è email...")
    asyncio.run(migrate_add_email())
    print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
