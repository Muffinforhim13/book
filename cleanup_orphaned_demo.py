#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ orphaned –∑–∞–ø–∏—Å–µ–π –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã outbox.
–≠—Ç–∏ –∑–∞–ø–∏—Å–∏ –æ—Å—Ç–∞–ª–∏—Å—å –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏ –±–ª–æ–∫–∏—Ä—É—é—Ç –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –¥–µ–º–æ.
"""

import asyncio
import aiosqlite
import sys
from datetime import datetime

DB_PATH = 'bookai.db'

async def cleanup_orphaned_demo_records():
    """–£–¥–∞–ª—è–µ—Ç orphaned –∑–∞–ø–∏—Å–∏ –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã outbox"""
    
    print("üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É orphaned –∑–∞–ø–∏—Å–µ–π –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
    
    async with aiosqlite.connect(DB_PATH) as db:
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        count_cursor = await db.execute('''
            SELECT COUNT(*) as count
            FROM outbox o
            LEFT JOIN orders ord ON o.order_id = ord.id
            WHERE o.type = 'multiple_images_with_text_and_button' AND ord.id IS NULL
        ''')
        count_result = await count_cursor.fetchone()
        orphaned_count = count_result[0] if count_result else 0
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {orphaned_count} orphaned –∑–∞–ø–∏—Å–µ–π –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        
        if orphaned_count == 0:
            print("‚úÖ Orphaned –∑–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –æ—á–∏—Å—Ç–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
            return
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        confirm = input(f"‚ùì –£–¥–∞–ª–∏—Ç—å {orphaned_count} orphaned –∑–∞–ø–∏—Å–µ–π –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞? (y/N): ")
        if confirm.lower() != 'y':
            print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            return
        
        # –£–¥–∞–ª—è–µ–º orphaned –∑–∞–ø–∏—Å–∏
        delete_cursor = await db.execute('''
            DELETE FROM outbox 
            WHERE id IN (
                SELECT o.id
                FROM outbox o
                LEFT JOIN orders ord ON o.order_id = ord.id
                WHERE o.type = 'multiple_images_with_text_and_button' AND ord.id IS NULL
            )
        ''')
        
        deleted_count = delete_cursor.rowcount
        await db.commit()
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {deleted_count} orphaned –∑–∞–ø–∏—Å–µ–π –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        verify_cursor = await db.execute('''
            SELECT COUNT(*) as count
            FROM outbox o
            LEFT JOIN orders ord ON o.order_id = ord.id
            WHERE o.type = 'multiple_images_with_text_and_button' AND ord.id IS NULL
        ''')
        verify_result = await verify_cursor.fetchone()
        remaining_orphaned = verify_result[0] if verify_result else 0
        
        if remaining_orphaned == 0:
            print("üéâ –í—Å–µ orphaned –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        else:
            print(f"‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å {remaining_orphaned} orphaned –∑–∞–ø–∏—Å–µ–π")

async def show_demo_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç—É"""
    
    print("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç—É:")
    
    async with aiosqlite.connect(DB_PATH) as db:
        # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞
        total_cursor = await db.execute('''
            SELECT COUNT(*) as count
            FROM outbox 
            WHERE type = 'multiple_images_with_text_and_button'
        ''')
        total_result = await total_cursor.fetchone()
        total_count = total_result[0] if total_result else 0
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ orphaned –∑–∞–ø–∏—Å–µ–π
        orphaned_cursor = await db.execute('''
            SELECT COUNT(*) as count
            FROM outbox o
            LEFT JOIN orders ord ON o.order_id = ord.id
            WHERE o.type = 'multiple_images_with_text_and_button' AND ord.id IS NULL
        ''')
        orphaned_result = await orphaned_cursor.fetchone()
        orphaned_count = orphaned_result[0] if orphaned_result else 0
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª–∏–¥–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
        valid_count = total_count - orphaned_count
        
        print(f"  üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞: {total_count}")
        print(f"  ‚úÖ –í–∞–ª–∏–¥–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {valid_count}")
        print(f"  ‚ùå Orphaned –∑–∞–ø–∏—Å–µ–π: {orphaned_count}")
        
        if orphaned_count > 0:
            print(f"  üö® –ü—Ä–æ–±–ª–µ–º–∞: {orphaned_count} orphaned –∑–∞–ø–∏—Å–µ–π –±–ª–æ–∫–∏—Ä—É—é—Ç –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –¥–µ–º–æ")
        else:
            print(f"  üéâ –ü—Ä–æ–±–ª–µ–º –Ω–µ—Ç: –≤—Å–µ –∑–∞–ø–∏—Å–∏ –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–≤—è–∑–∞–Ω—ã —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –∑–∞–∫–∞–∑–∞–º–∏")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üîß –°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ orphaned –∑–∞–ø–∏—Å–µ–π –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    print("=" * 50)
    
    try:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        await show_demo_statistics()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É
        await cleanup_orphaned_demo_records()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("\nüìà –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        await show_demo_statistics()
        
        print("\n‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main())
