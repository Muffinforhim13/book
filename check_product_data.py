#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–∏–ø–∞—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import aiosqlite
import json

DB_PATH = 'bookai.db'

async def check_product_data():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç–∏–ø–∞—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–∏–ø–∞—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤...")
    
    async with aiosqlite.connect(DB_PATH) as db:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É user_profiles
        print("\nüìä –¢–∞–±–ª–∏—Ü–∞ user_profiles:")
        async with db.execute('''
            SELECT user_id, product, username, first_name, last_name
            FROM user_profiles
            ORDER BY user_id DESC
            LIMIT 10
        ''') as cursor:
            profiles = await cursor.fetchall()
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(profiles)} –ø—Ä–æ—Ñ–∏–ª–µ–π:")
            for profile in profiles:
                user_id, product, username, first_name, last_name = profile
                print(f"  User ID: {user_id}, Product: '{product}', Username: '{username}', Name: '{first_name} {last_name}'")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É orders
        print("\nüìä –¢–∞–±–ª–∏—Ü–∞ orders:")
        async with db.execute('''
            SELECT id, user_id, status, order_data
            FROM orders
            ORDER BY id DESC
            LIMIT 10
        ''') as cursor:
            orders = await cursor.fetchall()
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(orders)} –∑–∞–∫–∞–∑–æ–≤:")
            for order in orders:
                order_id, user_id, status, order_data = order
                print(f"  Order ID: {order_id}, User ID: {user_id}, Status: '{status}'")
                
                # –ü–∞—Ä—Å–∏–º order_data
                try:
                    if order_data:
                        data = json.loads(order_data)
                        product = data.get('product', '–ù–ï–¢')
                        print(f"    Order Data Product: '{product}'")
                    else:
                        print(f"    Order Data: –ø—É—Å—Ç–æ–µ")
                except Exception as e:
                    print(f"    Order Data: –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ - {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º JOIN –º–µ–∂–¥—É orders –∏ user_profiles
        print("\nüìä JOIN orders + user_profiles:")
        async with db.execute('''
            SELECT o.id, o.user_id, o.status, u.product as user_product, u.username
            FROM orders o
            LEFT JOIN user_profiles u ON o.user_id = u.user_id
            ORDER BY o.id DESC
            LIMIT 10
        ''') as cursor:
            joined = await cursor.fetchall()
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(joined)} –∑–∞–ø–∏—Å–µ–π:")
            for record in joined:
                order_id, user_id, status, user_product, username = record
                print(f"  Order ID: {order_id}, User ID: {user_id}, Status: '{status}', User Product: '{user_product}', Username: '{username}'")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ event_metrics
        print("\nüìä –¢–∞–±–ª–∏—Ü–∞ event_metrics (product_selected):")
        async with db.execute('''
            SELECT user_id, event_type, product_type, timestamp
            FROM event_metrics
            WHERE event_type = 'product_selected'
            ORDER BY timestamp DESC
            LIMIT 10
        ''') as cursor:
            events = await cursor.fetchall()
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(events)} —Å–æ–±—ã—Ç–∏–π product_selected:")
            for event in events:
                user_id, event_type, product_type, timestamp = event
                print(f"  User ID: {user_id}, Event: '{event_type}', Product Type: '{product_type}', Time: '{timestamp}'")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–∏–ø–∞—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
    print("=" * 60)
    
    await check_product_data()
    
    print("\n" + "=" * 60)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
    print("  1. –ü–æ–ª–µ 'product' –≤ user_profiles –Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è")
    print("  2. –ü–æ–ª–µ 'product' –≤ order_data –Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è")
    print("  3. JOIN –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("  4. SQL –∑–∞–ø—Ä–æ—Å –≤—ã–±–∏—Ä–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–æ–ª—è")

if __name__ == "__main__":
    asyncio.run(main())
