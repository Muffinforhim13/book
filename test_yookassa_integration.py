#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ÆKassa –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏ —á–µ–∫–∞
"""

import asyncio
import json
import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

async def test_yookassa_payment_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏"""
    
    print("=== –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° –ÆKASSA ===")
    print(f"–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now()}")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
        from yookassa_integration import create_payment
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_order_id = 999999  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π ID
        test_amount = 100.0
        test_description = "–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞ - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏ —á–µ–∫–∞"
        test_product_type = "–ö–Ω–∏–≥–∞"
        
        print(f"\nüìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        print(f"   Order ID: {test_order_id}")
        print(f"   Amount: {test_amount} RUB")
        print(f"   Description: {test_description}")
        print(f"   Product Type: {test_product_type}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂
        print(f"\nüí≥ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞...")
        payment_data = await create_payment(
            order_id=test_order_id,
            amount=test_amount,
            description=test_description,
            product_type=test_product_type
        )
        
        print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:")
        print(f"   Payment ID: {payment_data.get('payment_id', 'N/A')}")
        print(f"   Status: {payment_data.get('status', 'N/A')}")
        print(f"   Confirmation URL: {payment_data.get('confirmation_url', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ
        if payment_data.get('payment_id'):
            print(f"\nüéâ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω! –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —Å ID: {payment_data['payment_id']}")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
            if not payment_data.get('payment_id', '').startswith('test_payment_'):
                print(f"üí° –≠—Ç–æ —Ä–µ–∞–ª—å–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –≤ –ÆKassa - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏")
            else:
                print(f"üí° –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ - —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
        else:
            print(f"\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω! –ü–ª–∞—Ç–µ–∂ –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω")
            return False
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    return True

async def test_payment_parameters():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ –∫–æ–¥–µ"""
    
    print(f"\n=== –ü–†–û–í–ï–†–ö–ê –ü–ê–†–ê–ú–ï–¢–†–û–í –§–ò–°–ö–ê–õ–ò–ó–ê–¶–ò–ò ===")
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª yookassa_integration.py
        with open('yookassa_integration.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        required_params = {
            'tax_system_code': 'tax_system_code' in content,
            'payment_subject': 'payment_subject' in content,
            'vat_code': 'vat_code' in content,
            'payment_subject_type': 'payment_subject_type' in content,
            'payment_mode_type': 'payment_mode_type' in content,
            'get_payment_subject_code': 'get_payment_subject_code' in content,
            'payment_mode': 'payment_mode' in content
        }
        
        print(f"\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏:")
        for param, exists in required_params.items():
            status = "‚úÖ" if exists else "‚ùå"
            print(f"   {status} {param}: {'–Ω–∞–π–¥–µ–Ω' if exists else '–ù–ï –ù–ê–ô–î–ï–ù'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
        all_present = all(required_params.values())
        
        if all_present:
            print(f"\nüéâ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
        else:
            print(f"\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
            
        return all_present
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ÆKassa")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –∫–æ–¥–µ
    params_ok = await test_payment_parameters()
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    payment_ok = await test_yookassa_payment_creation()
    
    print("\n" + "=" * 50)
    print("üìã –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏: {'‚úÖ OK' if params_ok else '‚ùå FAIL'}")
    print(f"   –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞: {'‚úÖ OK' if payment_ok else '‚ùå FAIL'}")
    
    if params_ok and payment_ok:
        print(f"\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ÆKassa –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.")
        print(f"üí° –¢–µ–ø–µ—Ä—å —á–µ–∫–∏ –¥–æ–ª–∂–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ñ–∏—Å–∫–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –æ–±–ª–∞—á–Ω–æ–π –∫–∞—Å—Å–µ.")
    else:
        print(f"\n‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´! –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.")
    
    return params_ok and payment_ok

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = asyncio.run(main())
    sys.exit(0 if success else 1)
